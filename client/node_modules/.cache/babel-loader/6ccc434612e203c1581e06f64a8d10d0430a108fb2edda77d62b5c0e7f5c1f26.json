{"ast":null,"code":"// API NOTIFICATION MESSAGES\nexport const API_NOTIFICATION_MESSAGES = {\n  success: {\n    title: \"Success\",\n    message: \"Data successfully loaded\"\n  },\n  requestFailure: {\n    title: \"Error!\",\n    message: \"An error occured while parsing request data\"\n  },\n  responseFailure: {\n    title: \"Error!\",\n    message: \"An error occured while fetching response from server. Please try again\"\n  },\n  networkError: {\n    title: \"Error!\",\n    message: \"Unable to connect to the server. Please check internet connectivity and try again.\"\n  }\n};\n\n// API SERVICE URL\n// SAMPLE REQUEST\n// NEED SERVICE CALL: { url: \"/\", method: \"POST/GET/PUT/DELETE\" }\nexport const SERVICE_URLS = {\n  userSignup: {\n    url: '/signup',\n    method: 'POST'\n  },\n  userLogin: {\n    url: '/login',\n    method: 'POST'\n  },\n  uploadFile: {\n    url: '/file/upload',\n    method: 'POST'\n  },\n  createPost: {\n    url: '/create',\n    method: 'POST'\n  },\n  getAllPosts: {\n    url: '/posts',\n    method: 'GET',\n    query: true\n  },\n  getPostById: {\n    url: '/post',\n    method: 'GET',\n    params: true\n  },\n  updatePost: {\n    url: '/update',\n    method: 'PUT',\n    params: true\n  },\n  deletePost: {\n    url: '/delete',\n    method: 'DELETE',\n    params: true\n  },\n  getAllComments: id => {\n    url = `/comments/${id}`, method = 'GET';\n  },\n  newComment: {\n    url: '/comment/new',\n    method: 'POST'\n  },\n  deleteComment: {\n    url: '/comment/delete',\n    method: 'DELETE',\n    params: true\n  }\n};","map":{"version":3,"names":["API_NOTIFICATION_MESSAGES","success","title","message","requestFailure","responseFailure","networkError","SERVICE_URLS","userSignup","url","method","userLogin","uploadFile","createPost","getAllPosts","query","getPostById","params","updatePost","deletePost","getAllComments","id","newComment","deleteComment"],"sources":["C:/Users/hp/Desktop/WebD projects/Blog-Application/client/src/constants/config.js"],"sourcesContent":["// API NOTIFICATION MESSAGES\r\nexport const API_NOTIFICATION_MESSAGES = {\r\n    success: {\r\n        title: \"Success\",\r\n        message: \"Data successfully loaded\"\r\n    },\r\n    requestFailure: {\r\n        title: \"Error!\",\r\n        message: \"An error occured while parsing request data\"\r\n    },\r\n    responseFailure: {\r\n        title: \"Error!\",\r\n        message: \"An error occured while fetching response from server. Please try again\"\r\n    },\r\n    networkError: {\r\n        title: \"Error!\",\r\n        message: \"Unable to connect to the server. Please check internet connectivity and try again.\"\r\n    }\r\n}\r\n\r\n// API SERVICE URL\r\n// SAMPLE REQUEST\r\n// NEED SERVICE CALL: { url: \"/\", method: \"POST/GET/PUT/DELETE\" }\r\nexport const SERVICE_URLS = {\r\n    userSignup: { url: '/signup', method: 'POST' },\r\n    userLogin: { url: '/login', method: 'POST' },\r\n    uploadFile: { url: '/file/upload', method: 'POST' },\r\n    createPost: { url: '/create', method: 'POST' },\r\n    getAllPosts: { url: '/posts', method: 'GET', query: true },\r\n    getPostById: { url: '/post', method: 'GET', params: true },\r\n    updatePost: { url: '/update', method: 'PUT', params: true },\r\n    deletePost: { url: '/delete', method: 'DELETE', params: true },\r\n    getAllComments: (id) => { url = `/comments/${id}`, method = 'GET'},\r\n    newComment: { url: '/comment/new', method: 'POST' },\r\n    deleteComment: { url: '/comment/delete', method: 'DELETE', params: true },\r\n}"],"mappings":"AAAA;AACA,OAAO,MAAMA,yBAAyB,GAAG;EACrCC,OAAO,EAAE;IACLC,KAAK,EAAE,SAAS;IAChBC,OAAO,EAAE;EACb,CAAC;EACDC,cAAc,EAAE;IACZF,KAAK,EAAE,QAAQ;IACfC,OAAO,EAAE;EACb,CAAC;EACDE,eAAe,EAAE;IACbH,KAAK,EAAE,QAAQ;IACfC,OAAO,EAAE;EACb,CAAC;EACDG,YAAY,EAAE;IACVJ,KAAK,EAAE,QAAQ;IACfC,OAAO,EAAE;EACb;AACJ,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAMI,YAAY,GAAG;EACxBC,UAAU,EAAE;IAAEC,GAAG,EAAE,SAAS;IAAEC,MAAM,EAAE;EAAO,CAAC;EAC9CC,SAAS,EAAE;IAAEF,GAAG,EAAE,QAAQ;IAAEC,MAAM,EAAE;EAAO,CAAC;EAC5CE,UAAU,EAAE;IAAEH,GAAG,EAAE,cAAc;IAAEC,MAAM,EAAE;EAAO,CAAC;EACnDG,UAAU,EAAE;IAAEJ,GAAG,EAAE,SAAS;IAAEC,MAAM,EAAE;EAAO,CAAC;EAC9CI,WAAW,EAAE;IAAEL,GAAG,EAAE,QAAQ;IAAEC,MAAM,EAAE,KAAK;IAAEK,KAAK,EAAE;EAAK,CAAC;EAC1DC,WAAW,EAAE;IAAEP,GAAG,EAAE,OAAO;IAAEC,MAAM,EAAE,KAAK;IAAEO,MAAM,EAAE;EAAK,CAAC;EAC1DC,UAAU,EAAE;IAAET,GAAG,EAAE,SAAS;IAAEC,MAAM,EAAE,KAAK;IAAEO,MAAM,EAAE;EAAK,CAAC;EAC3DE,UAAU,EAAE;IAAEV,GAAG,EAAE,SAAS;IAAEC,MAAM,EAAE,QAAQ;IAAEO,MAAM,EAAE;EAAK,CAAC;EAC9DG,cAAc,EAAGC,EAAE,IAAK;IAAEZ,GAAG,GAAG,aAAaY,EAAE,EAAE,EAAEX,MAAM,GAAG,KAAK;EAAA,CAAC;EAClEY,UAAU,EAAE;IAAEb,GAAG,EAAE,cAAc;IAAEC,MAAM,EAAE;EAAO,CAAC;EACnDa,aAAa,EAAE;IAAEd,GAAG,EAAE,iBAAiB;IAAEC,MAAM,EAAE,QAAQ;IAAEO,MAAM,EAAE;EAAK;AAC5E,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}